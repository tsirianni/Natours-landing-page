@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}


// Center absolute elements
@mixin center-absolute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Media querie
// Application order: base | typography | general layout | grid | page  layouts | components

/*
$Breakpoint argument choices:
- phone (600px)
- tab-port (900px)
- tab-land (1200px)
- medium-desktop (1614px)
- big-desktop (1800px+)
*/

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content }; // 600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content }; // 900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content }; // 1200px
    }
    @if $breakpoint == medium-desktop {
        @media only screen and (max-width: 100.87em) { @content }; // 1614px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content }; // 1800px
    }
}

// Image responsiveness - resolutions

// Header
@mixin hero-high-res {
    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
           only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
           only screen and (min-width: 125em) {
        background-image: linear-gradient(to right bottom,
        rgba($color-primary-light, 0.808),
        rgba($color-primary-dark, 0.808)),
        url("../img/hero.jpg");
    }
}

// In case of having more images to adapt accordingly.

@mixin respond-res {
    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
           only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
           only screen and (min-width: 125em) {
        @content;
    }
}

// Linear gradients

// Without opacity
@mixin linear-grad($color-one, $color-two) {
    background-image: linear-gradient(to right bottom, $color-one, $color-two);
}

// With opacity
@mixin linear-grad-op($color-one, $color-two, $opacity-one, $opacity-two) {
    background-image: linear-gradient(to right bottom,
    rgba($color-one, $opacity-one),
    rgba($color-two, $opacity-two));
}

// With opacity and image
@mixin linear-grad-img($color-one, $color-two, $opacity, $path) {
    background-image: linear-gradient(to right bottom,
    rgba($color-one, $opacity),
    rgba($color-two, $opacity)),
    url($path);
}
